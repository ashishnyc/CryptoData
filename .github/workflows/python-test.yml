name: Python Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:6
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-asyncio pytest-env pytest-cov
        pip install numpy==1.24.3
        pip install -r requirements.txt

    - name: Create test env file
      run: |
        echo "BYBIT_API_KEY=test_key" > .env.test
        echo "BYBIT_API_SECRET=test_secret" >> .env.test
        echo "BYBIT_TESTNET=true" >> .env.test
        echo "DB_CONNECTION_STRING=postgresql://postgres:postgres@localhost:5432/test_db" >> .env.test
        echo "BETTER_STACK_SOURCE_TOKEN=test_token" >> .env.test

    - name: Run tests with pytest and coverage
      env:
        BYBIT_API_KEY: test_key
        BYBIT_API_SECRET: test_secret
        BYBIT_TESTNET: "true"
        DB_CONNECTION_STRING: postgresql://postgres:postgres@localhost:5432/test_db
        BETTER_STACK_SOURCE_TOKEN: test_token
      run: |
        pytest tests/ -v --cov=. --cov-report=xml --cov-report=term

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}